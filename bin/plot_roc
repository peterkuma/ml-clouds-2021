#!/usr/bin/env python3
'''Plot ROC validation curves.

Usage: bin/plot_roc INPUT OUTPUT TITLE

Arguments:

  INPUT   Input data. The output of calc_val_stats (NetCDF).
  OUTPUT  Output plot (PDF)
  TITLE   Plot title.

Examples:

bin/plot_roc data/roc/all.nc plot/roc_all.pdf all
bin/plot_roc data/roc/regions.nc plot/roc_regions.pdf regions
'''

import sys
import ds_format as ds
from matplotlib import pyplot as plt
import matplotlib as mpl

mpl.rc('font', family='Open Sans')
mpl.rc('axes', linewidth=0.3)
mpl.rc('axes', grid=True)
mpl.rc('lines', linewidth=1.2)
mpl.rc('xtick.major', width=0.3)
mpl.rc('ytick.major', width=0.3)
mpl.rc('legend', framealpha=1)
mpl.rc('legend', facecolor='#eeeeee')
mpl.rc('legend', edgecolor='none')
mpl.rc('legend', fancybox=False)
mpl.rc('legend', fontsize=8)
mpl.rc('grid', color='k')
mpl.rc('grid', alpha=0.2)
mpl.rc('grid', lw=0.1)

COLORS = ['#0084C8', '#DC0000', '#009100', '#FFC022']
LINE_STYLES = ['solid', 'dashed', 'dotted', 'dashdot']

CLOUD_TYPES0 = ['High', 'Middle', 'Cumuliform', 'Stratiform']
CLOUD_TYPES1 = ['Ci', 'Cs', 'Cc', 'As', 'Ac', 'Cu', 'Sc', 'St', 'Cu+Sc', 'Cb']
CLOUD_TYPES2 = [
	'Cirrus fibratus/uncinus (H1)',
	'Cirrus spissatus (H2)',
	'Cirrus spissatus\ncumulonimbogenitus (H3)',
	'Cirrus fibratus/uncinus (H4)',
	'Cirrus/cirrostratus (H5)',
	'Cirrus/cirrostratus (H6)',
	'Cirrostratus whole sky (H7)',
	'Cirrostratus\nnot whole sky (H8)',
	'Cirrocumulus (H9)',
	'Cumulonimbus\ncapillatus (M1)',
	'Altostratus\nopacus/nimbostratus (M2)',
	'Altocumulus\ntranslucidus\nsingle level (M3)',
	'Altocumulus\ntranslucidus patches (M4)',
	'Altocumulus\ntranslucidus bands (M5)',
	'Altocumulus\ncumulogenitus (M6)',
	'Altocumulus\ntranslucidus/opacus (M7)',
	'Altocumulus\ncastellanus/floccus (M8)',
	'Altocumulus\nchaotic sky (M9)',
	'Cumulus\nhumilis/fractus (L1)',
	'Cumulus\nmediocris/congestus (L2)',
	'Cumulonimbus calvus (L3)',
	'Stratocumulus\ncumulogenitus (L4)',
	'Stratocumulus (L5)',
	'Stratus\nnebulosus/fractus (L6)',
	'Stratus/cumulus fractus (L7)',
	'Cumulus\nand stratocumulus (L8)',
	'Cumulonimbus capillatus (L9)',
]

if __name__ == '__main__':
	if len(sys.argv) != 4:
		sys.stderr.write(sys.modules[__name__].__doc__)
		sys.exit(1)
	input_ = sys.argv[1]
	output = sys.argv[2]
	title = sys.argv[3]
	print('<- %s' % input_)
	d = ds.read(input_)
	nclasses = ds.dim(d, 'cloud_type')
	cloud_types = {
		4: CLOUD_TYPES0,
		10: CLOUD_TYPES1,
		27: CLOUD_TYPES2,
	}[nclasses]
	for i in range(nclasses):
		plt.plot(d['roc_x'][:,i], d['roc_y'][:,i],
			color=COLORS[0],
			label='ANN, %s | AUC = %.2f' % (
				cloud_types[i].lower(),
				d['auc'][i]
			),
			linestyle=LINE_STYLES[i % 4],
		)
	plt.plot([0, 1], [0, 1], color='k', label='Random pred. | AUC = 0.50')
	plt.xlim(0, 1)
	plt.ylim(0, 1)
	plt.title('ROC %s' % title)
	plt.xlabel('1 - specificity')
	plt.ylabel('Sensitivity')
	plt.legend(fontsize=9, handlelength=1.3)
	plt.gca().set_aspect('equal', 'box')
	print('-> %s' % output)
	plt.savefig(output, bbox_inches='tight')
