#!/usr/bin/env bash

if [ "$ML_CONFIG" != 1 ]; then
	echo "$0: Import config with \". config_<i>\" before running this script" >&2
	exit 1
fi

set -e -x

NCORES="$(getconf _NPROCESSORS_ONLN)"
JOBS="${JOBS:-$NCORES}"
INPUT="${INPUT:-input}"
DATA="${DATA:-data}"
DATA_COMMON="${DATA_COMMON:-data}"
PLOT="${PLOT:-plot}"
NCLASSES="${NCLASSES:-4}"

TRAIN_YEARS="$(echo 2004 2005 {2009..2011} {2013..2016} {2018..2020})"
VAL_YEARS="2007 2012 2017"
CERES_YEARS="$(echo {2003..2020})"
CERES_YEARS_FIRST="$(echo $CERES_YEARS | awk '{ print $1 }')"
CERES_YEARS_LAST="$(echo $CERES_YEARS | awk '{ print $NF }')"
MODEL_YEARS="$(echo {2003..2014})"
MODEL_YEARS_FIRST="$(echo $MODEL_YEARS | awk '{ print $1 }')"
MODEL_YEARS_LAST="$(echo $MODEL_YEARS | awk '{ print $NF }')"
ABRUPT_YEARS="$(echo {1850..1949})"
ABRUPT_YEARS_FIRST="$(echo $ABRUPT_YEARS | awk '{ print $1 }')"
ABRUPT_YEARS_LAST="$(echo $ABRUPT_YEARS | awk '{ print $NF }')"
ABRUPT_YEARS_X="$(echo {0001..0100})"
ABRUPT_YEARS_X_FIRST="$(echo $ABRUPT_YEARS_X | awk '{ print $1 }')"
ABRUPT_YEARS_X_LAST="$(echo $ABRUPT_YEARS_X | awk '{ print $NF }')"

REGIONS="na ea oc sa nw ne se sw"
declare -A EXTENT
EXTENT[nw]="{ 0 90 -180 0 }"
EXTENT[ne]="{ 0 90 0 180 }"
EXTENT[sw]="{ -90 0 -180 0 }"
EXTENT[se]="{ -90 0 0 180 }"
EXTENT[ea]="{ 30 60 90 120 }"
EXTENT[na]="{ 15 45 -60 -30 }"
EXTENT[oc]="{ -45 -15 150 180 }"
EXTENT[sa]="{ -30 0 -75 -45 }"

prepare_model () {
	local exp="$1"
	local model="$2"
	local type_="$3"
	local inpath="$4"
	local y1="$5"
	local y2="$6"
	local years="$(seq -w $y1 $y2)"
	[ ! -e "$inpath" ] && return
	for y in $years; do mkdir -p "$DATA/samples/$exp/$model/$y"; done
	cont=0
	for y in $years; do
		[ ! -e "$DATA/samples/$exp/$model/$y.nc" ] && cont=1
	done
	[ $cont = 0 ] && return
	parallel -j$JOBS \
		bin/prepare_samples "$type_" "$inpath" none none {}-01-01 {}-12-31 \
		"$DATA/samples/$exp/$model/"{} ::: $years
	parallel -j1 \
		ds merge sample "$DATA/samples/$exp/$model/"{}/*.nc \
		"$DATA/samples/$exp/$model/"{}.nc ::: $years
}

predict_models () {
	exp="$1"
	for model in $(cat "$INPUT/models_$exp"); do
		indir="$DATA/samples/$exp/$model"
		outdir="$DATA/samples_pred/$exp/$model"
		[ ! -e "$indir" ] && continue
		cont=0
		for f in "$indir"/*.nc; do
			[ ! -e "$outdir/$(basename "$f")" ] && cont=1
		done
		[ $cont = 0 ] && continue
		mkdir -p "$DATA/samples_pred/$exp/$model"
		bin/ann apply "$DATA/ann/ceres.h5" "$DATA/samples/$exp/$model" \
			"$DATA/samples_pred/$exp/$model" nclasses: "$NCLASSES"
	done
}

calc_geo_cto () {
	in="$1"
	tas="$2"
	out="$3"
	outdir="$(dirname "$out")"
	[ ! -e "$in" -o -e "$out" ] && return
	[ ! -e "$tas" ] && tas=none
	mkdir -p "$outdir"
	bin/calc_geo_cto "$in" "$tas" "$out"
}

mkdir -p "$DATA"
mkdir -p "$DATA_COMMON"
mkdir -p "$DATA_COMMON/samples"
if [ "$DATA" != "$DATA_COMMON" ]; then
	ln -sfT "$(realpath "$DATA_COMMON/samples")" "$DATA/samples" || true
fi
mkdir -p "$PLOT"

case "$1" in
prepare_ceres)
	dir="$DATA/samples/ceres/"
	for y in $CERES_YEARS; do mkdir -p "$dir/$y"; done
	parallel -j$JOBS \
		bin/prepare_samples ceres "$INPUT/ceres/2.5deg" \
		"$INPUT/idd/synop" "$INPUT/idd/buoy" {}-01-01 {}-12-31 "$dir"/{} \
		::: $CERES_YEARS
	parallel -j1 ds merge sample "$dir"/{}/*.nc "$dir"/{}.nc ::: $CERES_YEARS
	mkdir -p "$dir"/{training,validation}
	for y in $TRAIN_YEARS; do ln -sf "../$y.nc" "$dir/training/"; done
	for y in $VAL_YEARS; do ln -sf "../$y.nc" "$dir/validation/"; done
	;;

train_ann)
	mkdir -p "$DATA/ann"
	bin/ann train "$DATA/samples/ceres/"{training,validation} \
		"$DATA/ann/ceres.h5" "$DATA/ann/history.nc" nclasses: "$NCLASSES"
	;;

train_ann_xval)
	for region in $REGIONS; do
		extent="${EXTENT[$region]}"
		dir="$DATA/xval/$region"
		mkdir -p "$dir/ann"
		bin/ann train "$DATA/samples/ceres/"{training,validation} \
			"$dir/ann/ceres.h5" "$dir/ann/history.nc" \
			nclasses: "$NCLASSES" exclude: $extent
	done
	;;

plot_training_history)
	bin/plot_training_history "$DATA/ann/history.nc" \
		"$PLOT/training_history.pdf"
	;;

plot_idd_stations)
	mkdir -p "$DATA/idd_sample/samples/"
	mkdir -p "$DATA/idd_sample/samples_pred/"
	mkdir -p "$DATA/idd_sample/idd"
	bin/prepare_samples ceres "$INPUT/ceres/2.5deg" "$INPUT/idd/synop" \
		"$INPUT/idd/buoy" 2010-01-01 2010-01-01 \
		"$DATA/idd_sample/samples/" keep_stations: true
	cp "$INPUT/idd/synop/Surface_Synoptic_20100101_0000.nc" \
		"$DATA/idd_sample/idd"
	cp "$INPUT/idd/buoy/Surface_Buoy_20100101_0000.nc" \
		"$DATA/idd_sample/idd"
	bin/ann apply "$DATA/ann/ceres.h5" "$DATA/idd_sample/samples" \
		"$DATA/idd_sample/samples_pred"
	bin/plot_idd_stations "$DATA/idd_sample/idd" \
		"$DATA/idd_sample/samples/2010-01-01T00:00:00.nc" \
		16 "$PLOT/idd_stations.png" 2010-01-01
	bin/plot_sample \
		"$DATA/idd_sample/samples"{,_pred}/2010-01-01T00:00:00.nc \
		16 "$PLOT/sample.png"
	;;

prepare_historical)
	exp=historical
	y1=$MODEL_YEARS_FIRST
	y2=$MODEL_YEARS_LAST
	for model in $(cat "$INPUT/models_$exp"); do
		if [ "$model" = EC-Earth3P ]; then
			prepare_model $exp EC-Earth3P cmip \
				"$INPUT/cmip6/hist-1950/day/2.5deg/by-model/EC-Earth3P" $y1 $y2
		elif [ "$model" = MERRA-2 ]; then
			prepare_model "$exp" MERRA-2 merra2 "$INPUT/merra2/2.5deg" $y1 $y2
		elif [ "$model" = ERA-5 ]; then
			prepare_model "$exp" ERA5 era5 "$INPUT/era5/2.5deg" $y1 $y2
		elif [ "$model" = NorESM2-LM ]; then
			prepare_model "$exp" NorESM2-LM noresm2 \
				"$INPUT/noresm2/$exp/day/2.5deg" $y1 $y2
		else
			prepare_model "$exp" "$model" cmip \
				"$INPUT/cmip6/$exp/day/2.5deg/by-model/$model" $y1 $y2
		fi
	done
	;;

prepare_abrupt-4xCO2)
	exp=abrupt-4xCO2
	y1=$ABRUPT_YEARS_FIRST
	y2=$ABRUPT_YEARS_LAST
	y1x=$ABRUPT_YEARS_X_FIRST
	y2x=$ABRUPT_YEARS_X_LAST
	for model in $(cat "$INPUT/models_$exp"); do
		if [ "$model" = GFDL-CM4 -or "$model" = NorESM2-LM ]; then
			y1_=$y1x
			y2_=$y2x
		else
			y1_=$y1
			y2_=$y2
		fi
		if [ "$model" = NorESM2-LM ]; then
			prepare_model "$exp" NorESM2-LM noresm2 \
				"$INPUT/noresm2/$exp/day/2.5deg" 0001 0100
		else
			prepare_model "$exp" "$model" cmip \
				"$INPUT/cmip6/$exp/day/2.5deg/by-model/$model" $y1_ $y2_
		fi
	done
	;;

predict_ceres)
	mkdir -p "$DATA/samples_pred/historical/CERES/validation"
	bin/ann apply "$DATA/ann/ceres.h5" "$DATA/samples/ceres" \
		"$DATA/samples_pred/historical/CERES" nclasses: "$NCLASSES"
	for y in $VAL_YEARS; do
		ln -sf ../$y.nc "$DATA/samples_pred/historical/CERES/validation/"
	done
	;;

predict_ceres_xval)
	for region in $REGIONS; do
		dir="$DATA/xval/$region/"
		mkdir -p "$dir/samples_pred/historical/CERES"
		bin/ann apply "$dir/ann/ceres.h5" "$DATA/samples/ceres/validation/" \
			"$dir/samples_pred/historical/CERES" nclasses: "$NCLASSES"
	done
	;;

predict_historical)
	predict_models historical
	;;

predict_abrupt-4xCO2)
	predict_models abrupt-4xCO2
	;;

calc_dtau_pct)
	bin/calc_dtau_pct "$DATA/samples_pred/historical/CERES" "$INPUT/ceres" \
		"$DATA/dtau_pct/dtau_pct.nc"
	;;

plot_dtau_pct)
	bin/plot_dtau_pct "$DATA/dtau_pct/dtau_pct.nc" "$PLOT/dtau_pct.png"
	;;

calc_geo_cto_historical)
	calc_geo_cto "$DATA/samples_pred/historical/CERES" \
		"$INPUT/tas/historical/CERES.nc" \
		"$DATA/geo_cto/historical/all/CERES.nc"
	calc_geo_cto "$DATA/samples_pred/historical/CERES/validation" \
		"$INPUT/tas/historical/CERES.nc" \
		"$DATA/geo_cto/historical/validation/CERES.nc"
	for model in $(cat "$INPUT/models_historical"); do
		calc_geo_cto "$DATA/samples_pred/historical/$model" \
			"$INPUT/tas/historical/$model.nc" \
			"$DATA/geo_cto/historical/all/$model.nc"
	done
	mkdir -p "$DATA/geo_cto/historical/part_"{1,2}
	for model in $(cat "$INPUT/models_historical_part_1"); do
		[ ! -e "$DATA/geo_cto/historical/all/$model.nc" ] && continue
		ln -sf "../all/$model.nc" "$DATA/geo_cto/historical/part_1/"
	done
	for model in $(cat "$INPUT/models_historical_part_2"); do
		[ ! -e "$DATA/geo_cto/historical/all/$model.nc" ] && continue
		ln -sf "../all/$model.nc" "$DATA/geo_cto/historical/part_2/"
	done
	;;

calc_idd_geo)
	mkdir -p "$DATA/idd_geo/"{,validation,training}
	parallel bin/calc_idd_geo "$INPUT/idd/"{synop,buoy} {}-01-01 {}-12-31 \
		"$DATA/idd_geo/validation/"{}.nc nclasses: "$NCLASSES" ::: $VAL_YEARS
	parallel bin/calc_idd_geo "$INPUT/idd/"{synop,buoy} {}-01-01 {}-12-31 \
		"$DATA/idd_geo/training/"{}.nc nclasses: "$NCLASSES" ::: $TRAIN_YEARS
	ds merge time "$DATA/idd_geo/validation/"*.nc "$DATA/idd_geo/validation.nc"
	ds merge time "$DATA/idd_geo/training/"*.nc "$DATA/idd_geo/training.nc"
	ln -sf "../../../idd_geo/validation/2007.nc" \
		"$DATA/geo_cto/historical/part_1/IDD.nc"
	;;

calc_geo_cto_xval)
	mkdir -p "$DATA/xval/geo_cto/all"
	for region in $REGIONS; do
		region_upper="${region^^}"
		dir="$DATA/xval/$region/"
		calc_geo_cto "$dir/samples_pred/historical/CERES" \
			"$INPUT/tas/historical/CERES.nc"
			"$dir/geo_cto/historical/all/CERES.nc"
	done
	bin/merge_xval_geo_cto \
		"$DATA/xval/"{na,ea,oc,sa}"/geo_cto/historical/all/CERES.nc" \
		${EXTENT[na]} ${EXTENT[ea]} ${EXTENT[oc]} ${EXTENT[sa]} \
		"$DATA/xval/geo_cto/regions.nc"
	ln -sf ../../../geo_cto/historical/validation/CERES.nc \
		"$DATA/xval/geo_cto/all/0_xval_all.nc"
	i=1
	for region in nw ne se sw; do
		region_upper="${region^^}"
		ln -sf "../../$region/geo_cto/historical/all/CERES.nc" \
			"$DATA/xval/geo_cto/all/${i}_xval_${region_upper}.nc"
		i=$(($i+1))
	done
	;;

calc_geo_cto_abrupt-4xCO2)
	for model in $(cat "$INPUT/models_abrupt-4xCO2"); do
		calc_geo_cto "$DATA/samples_pred/abrupt-4xCO2/$model" \
			"$INPUT/tas/abrupt-4xCO2/$model.nc" \
			"$DATA/geo_cto/abrupt-4xCO2/all/$model.nc"
	done
	mkdir -p "$DATA/geo_cto/abrupt-4xCO2/part_"{1,2}
	for model in $(cat "$INPUT/models_abrupt-4xCO2_part_1"); do
		[ ! -e "$DATA/geo_cto/abrupt-4xCO2/all/$model.nc" ] && continue
		ln -sf "../all/$model.nc" "$DATA/geo_cto/abrupt-4xCO2/part_1/"
	done
	for model in $(cat "$INPUT/models_abrupt-4xCO2_part_2"); do
		[ ! -e "$DATA/geo_cto/abrupt-4xCO2/all/$model.nc" ] && continue
		ln -sf "../all/$model.nc" "$DATA/geo_cto/abrupt-4xCO2/part_2/"
	done
	;;

calc_geo_cto_ceres_dense)
	mkdir -p "$DATA"/geo_cto/ceres_dense
	parallel -j$JOBS \
		bin/calc_geo_cto {} "$INPUT/tas/historical/CERES.nc" \
		"$DATA/geo_cto/ceres_dense/"{/} \
		:::: $(ls "$DATA/samples_pred/ceres_dense")
	;;

plot_geo_cto_historical)
	opts=""
	[ "$NCLASSES" = 10 -o "$NCLASSES" = 27 ] && opts="--normalized"
	bin/plot_geo_cto "$DATA/geo_cto/historical/part_1" "$INPUT/ecs/ecs.csv" \
		"$PLOT/geo_cto_historical_1.png" $opts
	bin/plot_geo_cto "$DATA/geo_cto/historical/part_2" "$INPUT/ecs/ecs.csv" \
		"$PLOT/geo_cto_historical_2.png" with_ref: false $opts
	;;

plot_geo_cto_abrupt-4xCO2)
	bin/plot_geo_cto "$DATA/geo_cto/abrupt-4xCO2/part_1" "$INPUT/ecs/ecs.csv" \
		"$PLOT/geo_cto_abrupt-4xCO2_1.png" degree: 1
	bin/plot_geo_cto "$DATA/geo_cto/abrupt-4xCO2/part_2" "$INPUT/ecs/ecs.csv" \
		"$PLOT/geo_cto_abrupt-4xCO2_2.png" degree: 1
	;;

plot_geo_cto_xval)
	opts=""
	[ "$NCLASSES" = 10 -o "$NCLASSES" = 27 ] && opts="--normalized"
	bin/plot_geo_cto "$DATA/xval/geo_cto/all" "$INPUT/ecs/ecs.csv" \
		"$PLOT/geo_cto_xval.png" relative: false $opts
	bin/plot_geo_cto "$DATA/xval/geo_cto/all" "$INPUT/ecs/ecs.csv" \
		"$PLOT/geo_cto_xval_rel.png" $opts
	;;

plot_cto_rmse_ecs)
	bin/plot_cto_rmse_ecs "$DATA/geo_cto/historical/all" "$INPUT/ecs/ecs.csv" \
		"$PLOT/cto_rmse.pdf"
	;;

plot_cto_historical)
	label="CMIP6 historical and reanalyses (${MODEL_YEARS_FIRST}-${MODEL_YEARS_LAST}) relative to CERES (${CERES_YEARS_FIRST}-${CERES_YEARS_LAST})"
	if [ "$NCLASSES" = 27 ]; then
		bin/plot_cto ecs 0 relative false "$DATA/geo_cto/historical/part_1" \
			"$INPUT/ecs/ecs.csv" "$PLOT/cto_historical_1.pdf" "$label"
		bin/plot_cto ecs 0 relative false "$DATA/geo_cto/historical/part_2" \
			"$INPUT/ecs/ecs.csv" "$PLOT/cto_historical_2.pdf" "$label"
	else
		bin/plot_cto ecs 0 relative false "$DATA/geo_cto/historical/all" \
			"$INPUT/ecs/ecs.csv" "$PLOT/cto_historical.pdf" "$label"
	fi
	;;

plot_cto_abrupt-4xCO2)
	label="CMIP abrupt-4xCO2 (first 100 years)"
	if [ "$NCLASSES" = 27 ]; then
		bin/plot_cto ecs 1-tas absolute false \
			"$DATA/geo_cto/abrupt-4xCO2/part_1" "$INPUT/ecs/ecs.csv" \
			"$PLOT/cto_abrupt-4xCO2_1.pdf" "$label" \
			legend: false
		bin/plot_cto ecs 1-tas absolute false \
			"$DATA/geo_cto/abrupt-4xCO2/part_2" "$INPUT/ecs/ecs.csv" \
			"$PLOT/cto_abrupt-4xCO2_2.pdf" "$label" \
			legend: false
	else
		bin/plot_cto ecs 1-tas absolute false \
			"$DATA/geo_cto/abrupt-4xCO2/all" "$INPUT/ecs/ecs.csv" \
			"$PLOT/cto_abrupt-4xCO2.pdf" "$label" \
			legend: false
	fi
	;;

calc_cto_ecs)
	bin/calc_cto_ecs "$DATA/geo_cto/abrupt-4xCO2/all" "$INPUT/ecs/ecs.csv" \
		"$DATA/cto_ecs/cto_ecs.nc"
	;;

plot_cto_ecs)
	bin/plot_cto_ecs ecs "$DATA/cto_ecs/cto_ecs.nc" "$PLOT/cto_ecs.pdf"
	;;

plot_validation)
	opts=""
	[ "$NCLASSES" = 10 -o "$NCLASSES" = 27 ] && opts="--normalized"
	bin/plot_validation "$DATA/idd_geo/"{validation,training}.nc \
		"$DATA/geo_cto/historical/validation/CERES.nc" \
		"$DATA/xval/geo_cto/regions.nc" "$PLOT/validation.png" $opts
	;;

calc_roc)
	mkdir -p "$DATA/roc"
	bin/calc_roc "$DATA/geo_cto/historical/validation/CERES.nc" \
		"$DATA/idd_geo/IDD.nc" "$DATA/roc/all.nc"
	bin/calc_roc "$DATA/xval/geo_cto/regions.nc" "$DATA/idd_geo/IDD.nc" \
		"$DATA/roc/regions.nc"
	;;

plot_roc)
	bin/plot_roc "$DATA/roc/all.nc" "$PLOT/roc_all.pdf" all
	bin/plot_roc "$DATA/roc/regions.nc" "$PLOT/roc_regions.pdf" regions
	;;

plot_station_corr)
	bin/plot_station_corr space "$DATA/idd_geo/2007.nc" \
		"$DATA/geo_cto/historical/all/CERES.nc" "$PLOT/station_corr_space.pdf"
	bin/plot_station_corr time "$DATA/idd_geo/2007.nc" \
		"$DATA/geo_cto/historical/all/CERES.nc" "$PLOT/station_corr_time.pdf"
	;;

plot_idd_n_obs)
	bin/plot_idd_n_obs "$DATA/idd_geo/validation.nc" "$PLOT/idd_n_obs.png"
	;;

*)
	echo "$0: Unknown command \"$1\"" >&2
	exit 1
esac
